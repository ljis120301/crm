name: crm-app
services:
  crm:
    container_name: crm
    entrypoint:
      - sh
      - -c
      - |
        echo "=== CRM Application Startup Log ==="
        
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Operating system: $(uname -a)"
        echo ""
        
        echo "[STEP 1] Installing system dependencies..."
        apk add --no-cache git
        echo "Git installed: $(git --version)"
        echo ""
        
        echo "[STEP 2] Setting up workspace..."
        rm -rf /app/* /app/.[^.]* 2>/dev/null || true
        echo ""
        
        echo "[STEP 3] Cloning repository..."
        cd /tmp
        rm -rf crm-app 2>/dev/null || true
        git clone https://github.com/ljis120301/crm.git crm-app
        if [ $? -ne 0 ]; then
          echo "ERROR: Failed to clone repository"
          exit 1
        fi
        echo "Moving repository to /app..."
        cp -r /tmp/crm-app/. /app/
        cd /app
        echo "Repository cloned successfully"
        echo ""
        
        echo "[STEP 4] Creating .env file..."
        echo 'DATABASE_URL="file:./dev.db"' > /app/.env
        echo 'ADMIN_PASSWORD=120301' >> /app/.env
        echo "✓ .env file created with environment variables"
        echo ""
        
        echo "[STEP 5] Verifying project structure..."
        if [ -f package.json ]; then
          echo "✓ package.json found"
        else
          echo "ERROR: package.json not found!"
          exit 1
        fi
        
        if [ -f next.config.mjs ]; then
          echo "✓ next.config.mjs found"
        else
          echo "✗ next.config.mjs not found"
        fi
        
        if [ -d app ]; then
          echo "✓ app directory found"
        else
          echo "✗ app directory not found"
        fi
        
        if [ -d components ]; then
          echo "✓ components directory found"
        else
          echo "✗ components directory not found"
        fi
        
        if [ -d prisma ]; then
          echo "✓ prisma directory found"
        else
          echo "✗ prisma directory not found"
        fi
        
        echo ""
        
        echo "[STEP 6] Installing npm dependencies..."
        npm install
        if [ $? -ne 0 ]; then
          echo "ERROR: npm install failed"
          exit 1
        fi
        echo "Dependencies installed successfully"
        echo ""
        
        echo "[STEP 7] Setting up database..."
        if [ -f prisma/schema.prisma ]; then
          echo "✓ Prisma schema found"
          echo "Generating Prisma client..."
          npx prisma generate
          if [ $? -ne 0 ]; then
            echo "ERROR: Prisma client generation failed"
            exit 1
          fi
          echo "✓ Prisma client generated"
          
          echo "Creating database directory..."
          mkdir -p /app/prisma
          chmod 755 /app/prisma
          echo "Database directory created: $(ls -la /app/prisma)"
          
          echo "Setting up database with URL: $DATABASE_URL"
          echo "Running database migrations..."
          npx prisma db push
          if [ $? -ne 0 ]; then
            echo "WARNING: Database push failed, but continuing..."
            echo "Database directory contents:"
            ls -la /app/prisma || echo "Cannot list prisma directory"
          else
            echo "✓ Database migrations completed"
          fi
        else
          echo "⚠️  Prisma schema not found, skipping database setup"
        fi
        echo ""
        
        echo "[STEP 8] Building application..."
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        
        npm run build
        if [ $? -ne 0 ]; then
          echo "ERROR: Build failed"
          echo "Checking for common issues..."
          echo "Project structure:"
          find . -name "*.tsx" -o -name "*.ts" -o -name "*.jsx" -o -name "*.js" | grep -v node_modules | sort
          echo "Package.json scripts:"
          cat package.json | grep -A 10 '"scripts"'
          echo "Package.json dependencies:"
          cat package.json | grep -A 20 '"dependencies"'
          echo "Environment variables:"
          env | grep -E "(NODE_ENV|DATABASE_URL)" || echo "No relevant env vars found"
          exit 1
        fi
        echo "Build completed successfully"
        echo ""
        
        echo "[STEP 9] Starting CRM application on port 3000..."
        exec npm start
    environment:
      - GIT_TERMINAL_PROMPT=0
      - NODE_ENV=production
      - DATABASE_URL=file:/app/prisma/dev.db
      - NEXT_PUBLIC_HTTPS=false
    hostname: crm
    image: node:18-alpine
    ports:
      - "3000:3000"
    restart: unless-stopped
    working_dir: /app 